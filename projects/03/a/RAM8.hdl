// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load ,sel=address[0..2] ,a=a ,b=b ,c=c ,d=d ,e=e ,f=f ,g=g ,h=h);
    Register(in=in[0..15], load=a, out=sortie1);
    Register(in=in[0..15], load=b, out=sortie2);
    Register(in=in[0..15], load=c, out=sortie3);
    Register(in=in[0..15], load=d, out=sortie4);
    Register(in=in[0..15], load=e, out=sortie5);
    Register(in=in[0..15], load=f, out=sortie6);
    Register(in=in[0..15], load=g, out=sortie7);
    Register(in=in[0..15], load=h, out=sortie8);
    Mux8Way16(a=sortie1 ,b=sortie2 ,c=sortie3 ,d=sortie4 ,e=sortie5 ,f=sortie6 ,g=sortie7 ,h=sortie8 ,sel=address[0..2] ,out=out[0..15]);
}